-- psql -h localhost -p 5432 -U postgres -d postgres

CREATE TABLE departments (
    dept_id SERIAL PRIMARY KEY,
    dept_name VARCHAR(100) NOT NULL,
    manager_name VARCHAR(100),
    budget DECIMAL(10,2)
);

CREATE TABLE employees (
    emp_id SERIAL PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50) NOT NULL,
    position VARCHAR(100),
    salary DECIMAL(10,2),
    hire_date DATE DEFAULT CURRENT_DATE,
    dept_id INTEGER NOT NULL,
    FOREIGN KEY (dept_id) REFERENCES departments(dept_id) ON DELETE CASCADE
);

INSERT INTO departments (dept_name, manager_name, budget) VALUES
('IT', 'Olivia Carter', 600000.00),
('Marketing', 'Ethan Harris', 250000.00),
('Finance', 'Sophia White', 300000.00);

INSERT INTO employees (first_name, last_name, position, salary, dept_id) VALUES
('Liam', 'Walker', 'Backend Developer', 72000.00, 1),
('Emma', 'Brooks', 'Frontend Developer', 71000.00, 1),
('Noah', 'Miller', 'Data Analyst', 69000.00, 3),
('Ava', 'Thompson', 'Marketing Manager', 55000.00, 2),
('Lucas', 'Bennett', 'DevOps Engineer', 78000.00, 1);
SELECT d.dept_name, e.first_name, e.last_name, e.position
FROM departments d
JOIN employees e ON d.dept_id = e.dept_id
ORDER BY d.dept_name, e.last_name;

CREATE TABLE students (
    student_id SERIAL PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(50) UNIQUE,
    enrollment_date DATE DEFAULT CURRENT_DATE
);

CREATE TABLE courses (
    course_id SERIAL PRIMARY KEY,
    course_code VARCHAR(10) UNIQUE NOT NULL,
    course_name VARCHAR(100) NOT NULL,
    credits INTEGER,
    instructor VARCHAR(100)
);

CREATE TABLE student_enrollments (
    enrollment_id SERIAL PRIMARY KEY,
    student_id INTEGER NOT NULL,
    course_id INTEGER NOT NULL,
    enrollment_date DATE DEFAULT CURRENT_DATE,
    grade CHAR(2),
    FOREIGN KEY (student_id) REFERENCES students(student_id) ON DELETE CASCADE,
    FOREIGN KEY (course_id) REFERENCES courses(course_id) ON DELETE CASCADE,
    UNIQUE (student_id, course_id)
);

INSERT INTO students (first_name, last_name, email) VALUES
('Mia', 'Collins', 'mia.collins@university.edu'),
('Elijah', 'Scott', 'elijah.scott@university.edu'),
('Amelia', 'Reed', 'amelia.reed@university.edu');

INSERT INTO courses (course_code, course_name, credits, instructor) VALUES
('CS-101', 'Intro to Programming', 6, 'Daniel Parker'),
('CS-202', 'Database Systems', 6, 'Julia Adams'),
('MATH-105', 'Linear Algebra', 6, 'Henry Watson');



INSERT INTO student_enrollments (student_id, course_id, grade) VALUES
(1, 1, 'A'),
(1, 2, 'A-'),
(2, 1, 'B+'),
(2, 3, 'A'),
(3, 2, 'B'),
(3, 3, 'A');

SELECT
    s.first_name || ' ' || s.last_name AS student_name,
    c.course_code,
    c.course_name,
    se.grade,
    se.enrollment_date
FROM students s
JOIN student_enrollments se ON s.student_id = se.student_id
JOIN courses c ON se.course_id = c.course_id
ORDER BY s.last_name, c.course_code;

SELECT
    s.first_name,
    s.last_name,
    se.grade
FROM students s
JOIN student_enrollments se ON s.student_id = se.student_id
JOIN courses c ON se.course_id = c.course_id
WHERE c.course_code = 'CS-101';

SELECT
    c.course_code,
    c.course_name,
    c.credits,
    se.grade
FROM students s
JOIN student_enrollments se ON s.student_id = se.student_id
JOIN courses c ON se.course_id = c.course_id
WHERE s.email = 'mia.collins@university.edu';
